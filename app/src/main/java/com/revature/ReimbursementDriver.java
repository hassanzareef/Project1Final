/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.revature;


import com.revature.controllers.UserController;
import com.revature.dao.IReimbursementDao;
import com.revature.dao.IUserDao;
import com.revature.dao.ReimbursementDaoJDBC;
import com.revature.dao.UserDaoJDBC;
import com.revature.services.ReimbursementService;
import com.revature.services.UserService;
import io.javalin.Javalin;
import com.revature.controllers.ReimbursementController;
import io.javalin.http.staticfiles.Location;

import static io.javalin.apibuilder.ApiBuilder.*;

public class ReimbursementDriver {


    public static void main(String[] args) {

        IUserDao ud = new UserDaoJDBC();
        UserService us = new UserService(ud);
        UserController uc = new UserController(us);

        IReimbursementDao rd = new ReimbursementDaoJDBC();
        ReimbursementService rs = new ReimbursementService(rd);
        ReimbursementController rc = new ReimbursementController(rs);


        Javalin server = Javalin.create(config -> {
            config.addStaticFiles("C:\\Users\\Dell\\Documents\\Project1Final\\Project1Final\\frontend", Location.EXTERNAL);
            config.enableCorsForAllOrigins();
        });

        server.before(ctx -> ctx.header("Access-Control-Allow-Credentials", "true"));
        server.before(ctx -> ctx.header("Access-Control-Expose-Headers", "*"));

        server.routes(()-> {
            path("users", () -> {
                post("/register", uc.handleRegister);
                post("/login", uc.handleLogin);
                put("/update", uc.handleUpdateUser);
                delete("/remove", uc.handleDeleteUser);
                get("/read", uc.handleReadUser);
                get("/viewall", uc.handleViewAllUsers);
                post("/logout", uc.handleLogout);
            });
            path("reimbursements", () -> {
                post("/create", rc.handleCreateRequest);
                get("/pending", rc.handleViewPendingRequest);
                get("/resolved", rc.handleViewResolvedRequest);
                get("/allpending", rc.handleViewAllPendingRequests);
                get("/allresolved", rc.handleViewAllResolvedRequests);
                get("/{id}", rc.handleViewRequestById);
                put("/approve/{id}", rc.handleApproveRequest);
                put("/deny/{id}", rc.handleDenyRequest);

            });
        });

        server.start(8000);

    }
}
